buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"
		classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'

allprojects {
	group = 'za.org.grassroot'
	version = '0.0.2d'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://repo.spring.io/plugins-release/" }
}

dependencyManagement {
	imports {
		mavenBom 'software.amazon.awssdk:bom:2.0.0-preview-9'
	}
}

dependencies {

	compile project('grassroot-graph-domain')
	compile('org.springframework.boot:spring-boot-starter-data-neo4j')

	compile 'software.amazon.awssdk:sqs' // v2 hence different naming

	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.5'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.5'

	compile('org.projectlombok:lombok')

	compileOnly("org.springframework:spring-context-indexer:5.0.6.RELEASE")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
	testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'

	// not working at present due to jetty mismatches
	testCompile group: 'org.neo4j', name: 'neo4j-ogm-test', version: '3.1.0'

}

// some stuff here for the quite nice & optimized docker layering

task deleteDockerDir(type: Delete) {
	delete "${buildDir}/docker"
}

task unzipBoot(type: Copy) {
	def zipFile = file("${buildDir}/libs/" + project.name + '-' + project.version + '.jar')
	def outputDir = file("${buildDir}/docker/app")

	from zipTree(zipFile)
	into outputDir

	def copyDetails = []
	eachFile { copyDetails << it } doLast { copyDetails.each { FileCopyDetails details ->
		def target = new File(outputDir, details.path)
		if (target.exists()) {
			target.setLastModified(details.lastModified)
		}
	}
	}
}
unzipBoot.dependsOn deleteDockerDir

task moveBootExplodedLib() {
	doLast {
		ant.move(file: "${buildDir}/docker/app/BOOT-INF/lib", toFile: "${buildDir}/docker/lib")
	}
}
moveBootExplodedLib.dependsOn unzipBoot

task createDockerfile () {
	doLast {
		def dockerfile = new File("$buildDir/Dockerfile")
		dockerfile.write 'FROM java:openjdk-8-jre-alpine\n'
		dockerfile << 'COPY docker/lib/ /app/BOOT-INF/lib/\n'
		dockerfile << 'COPY docker/app/ /app/\n'
		dockerfile << 'CMD java -Dspring.profiles.active=production -cp /app/ org.springframework.boot.loader.JarLauncher\n'
		dockerfile << 'EXPOSE 8080\n'
	}
}
createDockerfile.dependsOn moveBootExplodedLib
